a-general {
    #消息语言 en_US, zh_CN
    #修改后reload即可，自动生成语言文件
    lang=zh_CN,
    #推送数据到数据中心的间隔，单位：秒 格式：整型
    post-internal=10,
    #数据中心类型(默认且仅支持：InfluxDB)
    data-center-type=InfluxDB,
    #logger输出模式
    #启用后将会在控制台输出数据收集信息和推送信息
    logger-debug=false,
}
#数据中心的连接配置！重要！
data-center {
    #数据库地址
    host="http://localhost",
    #数据库端口
    port="8086",
    #连接用户
    user="root",
    #用户密码
    password="123456",
    #使用哪一个数据库
    database="mcserver",
    #InfluxDB的保留策略(默认保存策略autogen)
    retention-policy="autogen",
}
#所有数据收集器的启用设置！重要！
modules {
	#该项代表是否启用世界相关数据的收集
    world=true,
    #该项代表是否启用服务器相关数据的收集
    server=true,
}
#如果modules.world启用了，那么这里需要你仔细配置下
modules-world {
    #world收集器，该收集器会收集与游戏服务器世界相关的内容
    #存入TSDB时使用的数据表名称，不建议修改
    a-measurement-name="world",

    chunk {
        #区块数量 type=chunk_count
        #tags:  [type,world_UUID,world_name]
        #fields:[chunk_count]
        enable=true,
        #该数据采集器子项的采集间隔(单位：秒 格式：整型/双精度)
        internal=1.5,
    }

    entity {
        #世界实体数量 type=entity_count
        #tags:  [type,world_UUID,world_name]
        #fields:[entity_count]
        enable=true,
        internal=1,
    }
    tile-entity {
        #世界tile-entity数量 type=tileentity_count
        #tags:  [type,world_UUID,world_name]
        #fields:[tile_count]
        enable=true,
        internal=1,
    }
}
#如果modules.server启用了，那么这里需要你仔细配置下
modules-server {
    #server收集器，该收集器会收集与游戏服务器性能相关的内容
    #存入TSDB时使用的数据表名称，不建议修改
    a-measurement-name="server",

    tps {
        #TPS type=tps
        #tags:  [type]
        #fields:[tps]
        enable=true,
        #该数据采集器子项的采集间隔(单位：秒 格式：整型/双精度)
        internal=1,
    }

    memory {
        #内存使用情况 type=memory
        #tags:  [type]
        #fields:[memory_percent,memory_total,memory_free,memory_max,memory_allocated]
        enable=true,
        internal=1,
    }
    
    uptime {
        #服务器及JVM运行时间 type=uptime
        #tags:  [type]
        #fields:[serveruptime,jvmuptime]
        enable=true,
        internal=1,
    }
}